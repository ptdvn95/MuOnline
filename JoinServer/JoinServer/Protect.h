// Protect.h: interface for the CProtect class.
//
//////////////////////////////////////////////////////////////////////

#pragma once

#define PROTECT_START _asm _emit 0xEB _asm _emit 0x0E _asm _emit 0x14 _asm _emit 0x28 _asm _emit 0xCD _asm _emit 0xDB _asm _emit 0x50 _asm _emit 0x63 _asm _emit 0xAF _asm _emit 0x22 _asm _emit 0x75 _asm _emit 0xEE _asm _emit 0xB5 _asm _emit 0xD8 _asm _emit 0x43 _asm _emit 0x72
#define PROTECT_FINAL _asm _emit 0xEB _asm _emit 0x0E _asm _emit 0x37 _asm _emit 0xF2 _asm _emit 0xCD _asm _emit 0xDB _asm _emit 0x50 _asm _emit 0x63 _asm _emit 0xAF _asm _emit 0x22 _asm _emit 0x75 _asm _emit 0xEE _asm _emit 0xB5 _asm _emit 0xD8 _asm _emit 0x85 _asm _emit 0x61
#define CRASH_APPLICATION_MACRO _asm _emit 0xFF _asm _emit 0x25 _asm _emit 0x00 _asm _emit 0x00 _asm _emit 0x00 _asm _emit 0x00

struct LICENSE_MESSAGE
{
	int index;
	char Message[128];
};

struct LICENCE_FILE_DATA
{
	/* License */
	char CustomerName[32];
	char DisplayName[32];
	/* VPSInfo */
	char ServerIP[50];
	char ServerHID[45];
	/* Server */
	int SeasonIs;
	char MaxUpdate[10];
	int MaxGS;
	int MaxConnGS;
	int MaxConnections;
	int httpactivo;
	int LicAct;
	char PremiumOrFree[32];
};

struct CRC_DATA
{
	char PluginCrcGS[32];
	DWORD PluginCRC32GS;
	char PluginCrcGSCS[32];
	DWORD PluginCRC32GSCS;
	char PluginCrcJS[32];
	DWORD PluginCRC32JS;
};

class CProtect
{
public:
	CProtect();
	virtual ~CProtect();
	DWORD GetCurrentVersion();
	DWORD VersionSupport();
	char* RemoveCharacter(char* Input, char Character);
	char* GetEncryptedString(BYTE* string, int size);
	bool ReadFileCrc(char* name);
	void CheckCRCJS();

	LICENCE_FILE_DATA m_LicenceInfo;
	CRC_DATA m_FilesCrc;
	DWORD m_ClientFileCRC;
};

extern CProtect gProtect;


#define named "..//Data//Hack//game.cws"
//static BYTE gProtectString1[22] = {0x9E,0x9E,0xEC,0xEC,0xD4,0xD1,0xC4,0xD1,0xEC,0xEC,0xD7,0xD1,0xDD,0xD5,0x9E,0xD3,0xC9,0xC3,0xB0}; //.\\DATA\\License.dat
static BYTE gProtectString1[25] = { 0x9E, 0x9E, 0xEC, 0xEC, 0xD4, 0xD1, 0xC4, 0xD1, 0xEC, 0xEC, 0xD8, 0xD1, 0xD3, 0xDB, 0xEC, 0xEC, 0xD7, 0xD1, 0xDD, 0xD5, 0x9E, 0xD3, 0xC9, 0xC3, 0xB0 };
static BYTE gProtectString2[25] = { 0x95, 0x80, 0x88, 0xE8, 0x9D, 0x95, 0x80, 0x88, 0xE8, 0x9D, 0x95, 0x80, 0x88, 0xE8, 0x9D, 0x95, 0x80, 0x88, 0xE8, 0x9D, 0x95, 0x80, 0x88, 0xE8, 0xB0 }; //"%08x-%08x-%08x-%08x-%08x"
static BYTE gProtectString3[04] = { 0xF3, 0x8A, 0xEC, 0xB0 }; //"C:\\"
static BYTE gProtectString4[35] = { 0xF3, 0xDF, 0xC5, 0xDC, 0xD4, 0x90, 0xDE, 0xDF, 0xC4, 0x90, 0xD1, 0xC5, 0xC4, 0xD8, 0xD5, 0xDE, 0xC4, 0xD9, 0xD3, 0xD1, 0xC4, 0xD5, 0x90, 0xC4, 0xD8, 0xD5, 0x90, 0xDC, 0xD9, 0xD3, 0xD5, 0xDE, 0xC3, 0xD5, 0xB0 }; //"Could not authenticate the license"

static BYTE gProtectVersion[7] = { 0x80, 0x86, 0x9E, 0x80, 0x9E, 0x80, 0xB0 };
// 1	.	 0	  .	   3